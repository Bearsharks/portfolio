{"version":3,"sources":["Home.js","About.js","Contact.js","Experience.js","atoms/isNavActive.js","components/Navigation.js","MainContents.js","components/HamburgerBtn.js","App.js","reportWebVitals.js","index.js"],"names":["Home","wrapperRef","useRef","introRef","articleRef","articleFrameRef","lastReq","onScrollHandler","e","setCameraDirty","renderFrame","requestAnimationFrame","bind","curTransForm","current","scrollTop","clientHeight","style","transform","articleScrollTop","viewportSize","maxScrollTop","frameProgress","Math","max","min","curTop","maxViewportPosX","clientWidth","eleSize","children","childElementCount","first","floor","firstShownSizePer","firstStyle","opacity","second","secondShownSizePer","secondStyle","useEffect","addEventListener","window","removeEventListener","cancelAnimationFrame","ref","onScroll","className","About","props","Contact","Experience","isNavActive","atom","key","default","Navigation","useRecoilState","isActive","setNavActive","onClick","target","href","MainContents","history","useHistory","getLocationId","pathname","search","hash","block","location","action","to","activeClassName","exact","path","component","HamburgerBtn","setActive","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee4c1f5.chunk.js","sourcesContent":["import './Home.scss';\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nfunction Home() {\r\n    const wrapperRef = useRef(null);\r\n    const introRef = useRef(null);\r\n    const articleRef = useRef(null);\r\n    const articleFrameRef = useRef(null);\r\n    let lastReq = 0;\r\n    const onScrollHandler = (e) => {\r\n    }\r\n    const setCameraDirty = (e) => {\r\n    }\r\n\r\n    const renderFrame = () => {\r\n        lastReq = requestAnimationFrame(renderFrame.bind(this));\r\n        let curTransForm = 'translate(0,0)';\r\n        if (!wrapperRef.current) return;\r\n        if (wrapperRef.current.scrollTop < introRef.current.clientHeight) {\r\n            curTransForm = 'translate(0,0)';\r\n            if (curTransForm !== articleFrameRef.current.style.transform) articleFrameRef.current.style.transform = curTransForm;\r\n            return;\r\n        }\r\n        let articleScrollTop = wrapperRef.current.scrollTop - introRef.current.clientHeight;\r\n        let viewportSize = wrapperRef.current.clientHeight;\r\n        let maxScrollTop = (articleRef.current.clientHeight - viewportSize);\r\n        let frameProgress = Math.max(0, Math.min(0.9999, articleScrollTop / maxScrollTop));\r\n        let curTop = Math.min(maxScrollTop, articleScrollTop);\r\n        let maxViewportPosX = articleFrameRef.current.clientWidth - articleRef.current.clientWidth;\r\n        curTransForm = `translate(${-frameProgress * maxViewportPosX}px, ${curTop}px)`;\r\n\r\n        if (curTransForm === articleFrameRef.current.style.transform) return;\r\n        articleFrameRef.current.style.transform = curTransForm;\r\n\r\n\r\n        //10% 이상 보이면 스타일 바꿔줌 \r\n        let childCnt = articleFrameRef.current.children[0].childElementCount;\r\n        let eleSize = 1 / (childCnt - 1);\r\n        let first = Math.floor(frameProgress / eleSize);\r\n        let firstShownSizePer = (eleSize - (frameProgress % eleSize)) / eleSize;\r\n        let firstStyle = articleFrameRef.current.children[0].children[first].style;\r\n        if (firstShownSizePer > 0.15) {\r\n            if (!firstStyle.opacity || !firstStyle.transform) {\r\n                firstStyle.opacity = 1;\r\n                firstStyle.transform = `translateY(0)`;\r\n            }\r\n        }\r\n        else {\r\n            if (firstStyle.opacity && firstStyle.transform) {\r\n                firstStyle.opacity = \"\";\r\n                firstStyle.transform = \"\";\r\n            }\r\n        }\r\n\r\n        let second = first + 1;\r\n        let secondShownSizePer = 1 - firstShownSizePer;\r\n        let secondStyle = articleFrameRef.current.children[0].children[second].style;\r\n        if (secondShownSizePer > 0.15) {\r\n            if (!secondStyle.opacity || !secondStyle.transform) {\r\n                secondStyle.opacity = 1;\r\n                secondStyle.transform = `translateY(0)`;\r\n            }\r\n        }\r\n        else {\r\n            if (secondStyle.opacity && secondStyle.transform) {\r\n                secondStyle.opacity = \"\";\r\n                secondStyle.transform = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        wrapperRef.current.addEventListener('scroll', onScrollHandler);\r\n        window.addEventListener('resize', setCameraDirty);\r\n        renderFrame();\r\n        return () => {\r\n            debugger;\r\n            window.removeEventListener('resize', setCameraDirty);\r\n            if (lastReq) cancelAnimationFrame(lastReq);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            ref={wrapperRef}\r\n            onScroll={onScrollHandler}\r\n            className=\"flex-wrapper\">\r\n            <div\r\n                ref={introRef}\r\n                className=\"flex-wrapper__intro\"\r\n            >\r\n                스크롤을 아래로 내려주세요\r\n            </div>\r\n            <div\r\n                ref={articleRef}\r\n                className=\"flex-wrapper-article\"\r\n            >\r\n                <div ref={articleFrameRef} className=\"article-frame\">\r\n                    <ul>\r\n                        <li>a</li>\r\n                        <li>b</li>\r\n                        <li>c</li>\r\n                        <li>d</li>\r\n                        <li>e</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"test\">\r\n                test\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import './About.scss';\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import './Contact.scss';\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import './Experience.scss';\r\n\r\nfunction Experience() {\r\n    return (\r\n        <div>\r\n            Experience\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Experience;\r\n","import { atom } from 'recoil';\r\nexport const isNavActive = atom({\r\n    key: 'isNavActive',\r\n    default: false\r\n});","import React from \"react\"\r\nimport './Navigation.scss';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isNavActive } from '../atoms/isNavActive'\r\n\r\nfunction Navigation({ children }) {\r\n    const [isActive, setNavActive] = useRecoilState(isNavActive);\r\n    const inActiveNav = (e) => {\r\n        if (e.target.href) setNavActive(false);\r\n    }\r\n    return (\r\n        <div\r\n            onClick={inActiveNav}\r\n            className={\"navigation \" + (isActive ? \"navigation--active\" : \"navigation--inactive\")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import './App.scss';\r\nimport { useEffect } from \"react\"\r\nimport { Route, NavLink, Switch, Redirect, useHistory } from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport About from \"./About\"\r\nimport Contact from \"./Contact\"\r\nimport Experience from \"./Experience\"\r\nimport Mynav from \"./components/Navigation\"\r\n\r\nfunction MainContents(props) {\r\n    const history = useHistory();\r\n    const getLocationId = ({ pathname, search, hash }) => {\r\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            history.block((location, action) =>\r\n                action !== \"PUSH\" || getLocationId(location) !== getLocationId(history.location)\r\n            );\r\n        }, [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    );\r\n    return (\r\n        <>\r\n            <Mynav>\r\n                <NavLink to={`/portfolio/home`} activeClassName={'linkActive'}>Home</NavLink>\r\n                <NavLink to={`/portfolio/about`} activeClassName={'linkActive'}>About</NavLink>\r\n                <NavLink to={`/portfolio/works`} activeClassName={'linkActive'}>Works</NavLink>\r\n                <NavLink to={`/portfolio/contact`} activeClassName={'linkActive'}>Contact</NavLink>\r\n            </Mynav>\r\n            <Switch>\r\n                <Route exact path=\"/portfolio\">\r\n                    <Redirect to={`/portfolio/home`} />\r\n                </Route>\r\n                <Route path={`/portfolio/home`}>\r\n                    <Home></Home>\r\n                </Route>\r\n                <Route path={`/portfolio/works`}>\r\n                    <Experience></Experience>\r\n                </Route>\r\n                <Route path={`/portfolio/about`} component={About}>\r\n\r\n                </Route>\r\n                <Route path={`/portfolio/contact`}>\r\n                    <Contact></Contact>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainContents;\r\n","import './HamburgerBtn.scss';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isNavActive } from '../atoms/isNavActive'\r\n/*\r\n* props.clickHandler 햄버거버튼 누르면 발생하는 이벤트처리\r\n*/\r\nfunction HamburgerBtn(props) {\r\n    const [isActive, setActive] = useRecoilState(isNavActive);\r\n    const togleActive = () => {\r\n        setActive((isActive) ? false : true);\r\n    }\r\n    return (\r\n        <div\r\n            className={`hamburger-btn`}\r\n            onClick={togleActive}\r\n        >\r\n            <div\r\n                className={(isActive) ? `hamburger hamburger--active` : `hamburger`}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HamburgerBtn;\r\n","import './App.scss';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport MainContents from \"./MainContents\"\r\nimport HamburgerBtn from \"./components/HamburgerBtn\"\r\n\r\nfunction App(props) {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className=\"header-wrapper\">\r\n\t\t\t\t\t<div className=\"home-btn\">\r\n\t\t\t\t\t\thome버튼\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HamburgerBtn></HamburgerBtn>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<Route component={MainContents} />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</main>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}