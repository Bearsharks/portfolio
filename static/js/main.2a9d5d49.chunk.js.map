{"version":3,"sources":["Home.js","About.js","constants/constants.js","Contact.js","Experience.js","atoms/isNavActive.js","components/Navigation.js","MainContents.js","components/HamburgerBtn.js","App.js","reportWebVitals.js","index.js"],"names":["Home","wrapperRef","useRef","introRef","articleRef","articleFrameRef","lastReq","onScrollHandler","e","setCameraDirty","changeStyle","styleElement","styleName","attribute","isSame","renderFrame","current","scrollTop","clientHeight","style","articleScrollTop","viewportSize","maxScrollTop","frameProgress","Math","max","min","curTop","maxViewportPosX","clientWidth","toFixed","eleSize","children","childElementCount","first","floor","firstShownSizePer","firstStyle","second","secondShownSizePer","secondStyle","moveFrame","requestAnimationFrame","bind","useEffect","addEventListener","window","removeEventListener","cancelAnimationFrame","ref","onScroll","className","About","props","RECAPTCHA_CLIENT_KEY","Contact","useState","name","setName","email","setEmail","message","setMessage","response","setResponse","wrapper","script","document","createElement","innerHTML","appendChild","type","onChange","target","value","cols","rows","aria-invalid","onClick","grecaptcha","ready","execute","action","then","token","fetch","method","headers","body","JSON","stringify","res","catch","err","submitData","Experience","isNavActive","atom","key","default","Navigation","useRecoilState","isActive","setNavActive","href","MainContents","history","useHistory","getLocationId","pathname","search","hash","block","location","to","activeClassName","exact","path","component","HamburgerBtn","setActive","App","getElementById","id","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a9d5d49.chunk.js","sourcesContent":["import './Home.scss';\r\nimport { useEffect, useRef } from \"react\"\r\n\r\nfunction Home() {\r\n    const wrapperRef = useRef(null);\r\n    const introRef = useRef(null);\r\n    const articleRef = useRef(null);\r\n    const articleFrameRef = useRef(null);\r\n    let lastReq = useRef(null);\r\n    const onScrollHandler = (e) => {\r\n    }\r\n    const setCameraDirty = (e) => {\r\n    }\r\n    const changeStyle = (styleElement, styleName, attribute) => {\r\n        let isSame = attribute == styleElement[styleName];\r\n        if (!isSame) {\r\n            styleElement[styleName] = attribute;\r\n        }\r\n        return isSame;\r\n    }\r\n    const moveFrame = () => {\r\n        if (wrapperRef.current.scrollTop < introRef.current.clientHeight) {\r\n            changeStyle(articleFrameRef.current.style, \"transform\", \"translate(0px, 0px)\");\r\n            return;\r\n        }\r\n        let articleScrollTop = wrapperRef.current.scrollTop - introRef.current.clientHeight;\r\n        let viewportSize = wrapperRef.current.clientHeight;\r\n        let maxScrollTop = (articleRef.current.clientHeight - viewportSize);\r\n        let frameProgress = Math.max(0, Math.min(0.9999, articleScrollTop / maxScrollTop));\r\n        let curTop = Math.min(maxScrollTop, articleScrollTop);\r\n        let maxViewportPosX = articleFrameRef.current.clientWidth - articleRef.current.clientWidth;\r\n        let isSame = changeStyle(articleFrameRef.current.style, \"transform\",\r\n            `translate(${(-frameProgress * maxViewportPosX).toFixed(0)}px, ${curTop.toFixed(0)}px)`);\r\n        if (isSame) return;\r\n\r\n        //10% 이상 보이면 스타일 바꿔줌 \r\n        let childCnt = articleFrameRef.current.children[0].childElementCount;\r\n        let eleSize = 1 / (childCnt - 1);\r\n        let first = Math.floor(frameProgress / eleSize);\r\n        let firstShownSizePer = (eleSize - (frameProgress % eleSize)) / eleSize;\r\n        let firstStyle = articleFrameRef.current.children[0].children[first].style;\r\n        if (firstShownSizePer > 0.15) {\r\n            changeStyle(firstStyle, \"opacity\", \"1\");\r\n            changeStyle(firstStyle, \"transform\", `translateY(0px)`);\r\n        }\r\n        else {\r\n            changeStyle(firstStyle, \"opacity\", \"\");\r\n            changeStyle(firstStyle, \"transform\", \"\");\r\n        }\r\n\r\n        let second = first + 1;\r\n        let secondShownSizePer = 1 - firstShownSizePer;\r\n        let secondStyle = articleFrameRef.current.children[0].children[second].style;\r\n        if (secondShownSizePer > 0.15) {\r\n            changeStyle(secondStyle, \"opacity\", \"1\");\r\n            changeStyle(secondStyle, \"transform\", `translateY(0px)`);\r\n        }\r\n        else {\r\n            changeStyle(secondStyle, \"opacity\", \"\");\r\n            changeStyle(secondStyle, \"transform\", \"\");\r\n        }\r\n    }\r\n    const renderFrame = () => {\r\n        if (wrapperRef.current) moveFrame();\r\n        lastReq = requestAnimationFrame(renderFrame.bind(this));\r\n    }\r\n\r\n    useEffect(() => {\r\n        wrapperRef.current.addEventListener('scroll', onScrollHandler);\r\n        window.addEventListener('resize', setCameraDirty);\r\n        lastReq.current = requestAnimationFrame(renderFrame);\r\n        return () => {\r\n            window.removeEventListener('resize', setCameraDirty);\r\n            if (lastReq.current) cancelAnimationFrame(lastReq.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            ref={wrapperRef}\r\n            onScroll={onScrollHandler}\r\n            className=\"flex-wrapper\">\r\n            <div\r\n                ref={introRef}\r\n                className=\"flex-wrapper__intro\"\r\n            >\r\n                스크롤을 아래로 내려주세요\r\n            </div>\r\n            <div\r\n                ref={articleRef}\r\n                className=\"flex-wrapper-article\"\r\n            >\r\n                <div ref={articleFrameRef} className=\"article-frame\">\r\n                    <ul>\r\n                        <li>a</li>\r\n                        <li>b</li>\r\n                        <li>c</li>\r\n                        <li>d</li>\r\n                        <li>e</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"test\">\r\n                test\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import './About.scss';\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","//Home focus\r\nexport const INTRO = \"INTRO\";\r\nexport const ARTICLE = \"ARTICLE\";\r\n\r\n//리캡차\r\nexport const RECAPTCHA_CLIENT_KEY = \"6Ld9SUIbAAAAAN__YHlRxYzmc-G8NXAfvk8XdjN5\";","import './Contact.scss';\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { RECAPTCHA_CLIENT_KEY } from './constants/constants';\r\n\r\nfunction Contact() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('asdfasdf');\r\n    const [response, setResponse] = useState('');\r\n    const wrapper = useRef('');\r\n    const onSubmit = () => {\r\n        const submitData = (token) => {\r\n            fetch('https://99-interactions-functions.azurewebsites.net/api/send_contact?code=tTrkanYWNrTsl87QAyaNKbHNQw7UTqflaYzvwsi5RJ5JuAfoIarOFg==', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"name\": name,\r\n                    \"email\": email,\r\n                    \"message\": message,\r\n                    \"g-recaptcha-response\": token\r\n                })\r\n            }).then((res) => {\r\n                setResponse(\"send message success\");\r\n            }).catch((err) => {\r\n                setResponse(\"send message fail...\");\r\n            });\r\n        }\r\n        window.grecaptcha.ready(() => {\r\n            window.grecaptcha.execute(RECAPTCHA_CLIENT_KEY, { action: 'submit' })\r\n                .then(token => {\r\n                    submitData(token);\r\n                });\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        //리캡차가 현재 페이지에서만 보여지도록 함\r\n        const script = document.createElement(\"style\");\r\n        script.innerHTML = `.grecaptcha-badge {visibility : visible;}`;\r\n        wrapper.current.appendChild(script);\r\n    }, []);\r\n    return (\r\n        <div ref={wrapper}>\r\n            Contact<br />\r\n            <div className={`message-form`}>\r\n                <label>Name : </label>\r\n                <input type=\"text\" onChange={e => setName(e.target.value)} value={name} />\r\n                <label>e-mail : </label>\r\n                <input type=\"text\" onChange={e => setEmail(e.target.value)} value={email} />\r\n                <label>message : </label>\r\n                <textarea name=\"message\" cols=\"40\" rows=\"10\" aria-invalid=\"false\" onChange={e => setMessage(e.target.value)} value={message} />\r\n                <button onClick={onSubmit}>제출</button>\r\n            </div>\r\n            <br />\r\n            {response && <label>Output:{response}</label>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import './Experience.scss';\r\n\r\nfunction Experience() {\r\n    return (\r\n        <div>\r\n            Experience\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Experience;\r\n","import { atom } from 'recoil';\r\nexport const isNavActive = atom({\r\n    key: 'isNavActive',\r\n    default: false\r\n});","import React from \"react\"\r\nimport './Navigation.scss';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isNavActive } from '../atoms/isNavActive'\r\n\r\nfunction Navigation({ children }) {\r\n    const [isActive, setNavActive] = useRecoilState(isNavActive);\r\n    const inActiveNav = (e) => {\r\n        if (e.target.href) setNavActive(false);\r\n    }\r\n    return (\r\n        <div\r\n            onClick={inActiveNav}\r\n            className={\"navigation \" + (isActive ? \"navigation--active\" : \"navigation--inactive\")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import './App.scss';\r\nimport { useEffect } from \"react\"\r\nimport { Route, NavLink, Switch, Redirect, useHistory } from \"react-router-dom\";\r\nimport Home from \"./Home\"\r\nimport About from \"./About\"\r\nimport Contact from \"./Contact\"\r\nimport Experience from \"./Experience\"\r\nimport Mynav from \"./components/Navigation\"\r\n\r\nfunction MainContents(props) {\r\n    const history = useHistory();\r\n    const getLocationId = ({ pathname, search, hash }) => {\r\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            history.block((location, action) =>\r\n                action !== \"PUSH\" || getLocationId(location) !== getLocationId(history.location)\r\n            );\r\n        }, [] // eslint-disable-line react-hooks/exhaustive-deps\r\n    );\r\n    return (\r\n        <>\r\n            <Mynav>\r\n                <NavLink to={`/portfolio/home`} activeClassName={'linkActive'}>Home</NavLink>\r\n                <NavLink to={`/portfolio/about`} activeClassName={'linkActive'}>About</NavLink>\r\n                <NavLink to={`/portfolio/works`} activeClassName={'linkActive'}>Works</NavLink>\r\n                <NavLink to={`/portfolio/contact`} activeClassName={'linkActive'}>Contact</NavLink>\r\n            </Mynav>\r\n            <Switch>\r\n                <Route exact path=\"/portfolio\">\r\n                    <Redirect to={`/portfolio/home`} />\r\n                </Route>\r\n                <Route path={`/portfolio/home`}>\r\n                    <Home></Home>\r\n                </Route>\r\n                <Route path={`/portfolio/works`}>\r\n                    <Experience></Experience>\r\n                </Route>\r\n                <Route path={`/portfolio/about`} component={About}>\r\n\r\n                </Route>\r\n                <Route path={`/portfolio/contact`}>\r\n                    <Contact></Contact>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainContents;\r\n","import './HamburgerBtn.scss';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isNavActive } from '../atoms/isNavActive'\r\n/*\r\n* props.clickHandler 햄버거버튼 누르면 발생하는 이벤트처리\r\n*/\r\nfunction HamburgerBtn(props) {\r\n    const [isActive, setActive] = useRecoilState(isNavActive);\r\n    const togleActive = () => {\r\n        setActive((isActive) ? false : true);\r\n    }\r\n    return (\r\n        <div\r\n            className={`hamburger-btn`}\r\n            onClick={togleActive}\r\n        >\r\n            <div\r\n                className={(isActive) ? `hamburger hamburger--active` : `hamburger`}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HamburgerBtn;\r\n","import { useEffect } from 'react'\r\nimport './App.scss';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport MainContents from \"./MainContents\"\r\nimport HamburgerBtn from \"./components/HamburgerBtn\"\r\nimport { RECAPTCHA_CLIENT_KEY } from './constants/constants';\r\n\r\nfunction App(props) {\r\n\tuseEffect(() => {\r\n\t\tconst isScriptExist = document.getElementById(\"recaptcha\");\r\n\t\tif (!isScriptExist) {\r\n\t\t\tconst script = document.createElement(\"script\");\r\n\t\t\tscript.type = \"text/javascript\";\r\n\t\t\tscript.id = \"recaptcha\";\r\n\t\t\tscript.src = `https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_CLIENT_KEY}`;\r\n\t\t\tdocument.body.appendChild(script);\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className=\"header-wrapper\">\r\n\t\t\t\t\t<div className=\"home-btn\">\r\n\t\t\t\t\t\thome버튼\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<HamburgerBtn></HamburgerBtn>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<Route component={MainContents} />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</main>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { RecoilRoot } from 'recoil';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<RecoilRoot><\r\n\t\t\tApp />\r\n\t\t</RecoilRoot>\r\n\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}